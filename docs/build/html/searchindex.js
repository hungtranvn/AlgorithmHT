Search.setIndex({"docnames": ["advancedDataStructures", "advancedDesignAndAnalysisTechniques", "dataStructures", "foundations", "graphAlgorithms", "index", "sortingAndOrderStatics"], "filenames": ["advancedDataStructures.rst", "advancedDesignAndAnalysisTechniques.rst", "dataStructures.rst", "foundations.rst", "graphAlgorithms.rst", "index.rst", "sortingAndOrderStatics.rst"], "titles": ["Advanced Data Structures", "Advanced Design And Analysis Techniques", "Data Structures", "Foundations", "Graph Algorithms", "Welcome to Algorithms\u2019s documentation!", "Sorting And Order Statics"], "terms": {"index": [], "modul": [], "search": [1, 5], "page": [], "lumach": [], "lu": [], "make": 5, "i": [3, 5], "python": [], "librari": [], "cook": [], "food": [], "lover": [], "creat": [], "recip": [], "mix": [], "random": 5, "ingredi": [], "It": [], "pull": [], "data": 5, "from": 5, "open": 5, "fact": [], "databas": [], "offer": [], "simpl": [], "intuit": [], "api": [], "note": [], "thi": 5, "project": 5, "under": 5, "activ": 5, "develop": 5, "usag": [], "instal": [], "To": 5, "us": 5, "first": 5, "pip": [], "venv": [], "founddat": [], "The": 5, "role": 5, "comput": 5, "get": 5, "start": 5, "growth": 5, "function": 5, "divid": 5, "conquer": 5, "probabilist": 5, "analysi": 5, "foundat": 5, "an": [3, 5], "ani": 3, "well": 3, "defin": 3, "procedur": 3, "take": 3, "some": 3, "valu": 3, "set": [3, 5], "input": 3, "produc": 3, "output": 3, "thu": 3, "sequenc": 3, "step": [3, 5], "transform": 3, "book": 5, "provid": 5, "you": 5, "enjoy": 5, "introduct": 5, "field": 5, "we": 5, "have": 5, "attempt": 5, "everi": 5, "access": 5, "interst": 5, "help": 5, "when": 5, "encount": 5, "unfamiliar": 5, "difficult": 5, "describ": 5, "each": 5, "one": 5, "manner": 5, "sortingandorderstat": [], "sort": 5, "And": 5, "order": 5, "static": 5, "hepsort": 5, "quicksort": 5, "linear": 5, "time": 5, "median": 5, "structur": 5, "elementari": 5, "hash": 5, "binari": [1, 5], "tree": [1, 5], "read": 5, "black": 5, "augment": 5, "advanc": 5, "design": 5, "techniqu": 5, "dynam": 5, "program": 5, "greedi": 5, "amort": 5, "avanc": [], "b": 5, "fibonaci": 5, "heap": 5, "van": 5, "emd": 5, "boa": 5, "disjoint": 5, "graph": 5, "minimum": 5, "span": 5, "singl": 5, "sourc": 5, "shortest": 5, "path": 5, "all": 5, "pair": 5, "maximum": 5, "flow": 5, "technologi": 5, "insert": 5, "analyz": 5, "asymptot": 5, "notat": 5, "standard": 5, "common": 5, "subarrai": 5, "problem": 5, "script": [], "var": [], "canva": [], "getelementbyid": [], "mycanva": [], "ctx": [], "getcontext": [], "2d": [], "fillstyl": [], "ff0000": [], "fillrect": [], "0": [], "150": [], "75": [], "1": [], "strassen": 5, "matrix": 5, "multipl": 5, "substitut": 5, "method": 5, "solv": 5, "recurr": 5, "master": 5, "proof": 5, "theorem": 5, "hire": 5, "variabl": 5, "further": 5, "maintain": 5, "properti": 5, "build": 5, "heapsort": 5, "prioriti": 5, "queue": 5, "descript": 5, "perform": 5, "A": 5, "version": 5, "lower": 5, "bound": 5, "count": 5, "radix": 5, "bucket": 5, "select": 5, "expect": 5, "worst": 5, "case": 5, "optim": 1, "stack": 5, "link": 5, "list": 5, "implement": 5, "pointer": 5, "object": 5, "repres": 5, "root": 5, "direct": 5, "address": 5, "perfect": 5, "what": 5, "queri": 5, "delet": 5, "randomli": 5, "built": 5, "red": 5, "rotat": 5, "orer": 5, "statist": 5, "how": 5, "interv": 5, "rod": 5, "cut": 5, "chain": 5, "element": 5, "longest": 5, "subsequ": 5, "strategi": 5, "huffman": 5, "code": 5, "matroid": 5, "task": 5, "schedul": 5, "aggreg": 5, "account": 5, "potenti": 5, "definit": 5, "basic": 5, "oper": 5, "kei": 5, "fibonacci": 5, "mergeabl": 5, "decreas": 5, "node": 5, "degre": 5, "preliminari": 5, "approach": 5, "recurs": 5, "boe": 5, "represent": 5, "forest": 5, "union": 5, "rank": 5, "compress": 5, "breadth": 5, "depth": 5, "topolog": 5, "strongli": 5, "connect": 5, "compon": 5, "grow": 5, "kruskal": 5, "prim": 5, "bellman": 5, "ford": 5, "acycl": 5, "dijkstra": 5, "differ": 5, "constraint": 5, "floyd": 5, "warshal": 5, "johnson": 5, "spars": 5, "network": 5, "fulkerson": 5, "bipartit": 5, "match": 5, "push": 5, "relabel": 5, "front": 5}, "objects": {}, "objtypes": {}, "objnames": {}, "titleterms": {"welcom": 5, "algorithm": [1, 3, 4, 5, 6], "": [3, 4, 5], "document": 5, "indic": [3, 5], "tabl": [1, 2, 5], "usag": [], "instal": [], "founddat": [], "The": [0, 1, 3, 4, 6], "role": 3, "comput": 3, "get": 3, "start": 3, "growth": 3, "function": [2, 3], "divid": 3, "conquer": 3, "probabilist": 3, "analysi": [0, 1, 3, 6], "random": [3, 6], "foundat": 3, "sortingandorderstat": [], "sort": [3, 6], "And": [1, 6], "order": 6, "static": 6, "hepsort": 6, "quicksort": 6, "linear": 6, "time": 6, "median": 6, "data": [0, 2], "structur": [0, 2], "elementari": [2, 4], "hash": 2, "binari": 2, "search": [2, 4], "tree": [0, 2, 3, 4], "read": 2, "black": 2, "augment": 2, "advanc": [0, 1], "design": [1, 3], "techniqu": 1, "dynam": [1, 2], "program": 1, "greedi": 1, "amort": 1, "avanc": [], "b": 0, "fibonaci": 0, "heap": [0, 6], "van": 0, "emd": 0, "boa": 0, "disjoint": 0, "set": 0, "graph": 4, "minimum": [4, 6], "span": 4, "singl": 4, "sourc": 4, "shortest": 4, "path": [0, 4], "all": 4, "pair": 4, "maximum": [0, 3, 4, 6], "flow": 4, "technologi": 3, "insert": [2, 3], "analyz": 3, "asymptot": 3, "notat": 3, "standard": 3, "common": [1, 3], "subarrai": 3, "problem": [1, 3], "1": [], "strassen": 3, "matrix": [1, 3, 4], "multipl": [1, 3, 4], "substitut": 3, "method": [1, 3, 4], "solv": 3, "recurr": 3, "master": 3, "proof": [3, 4], "theorem": 3, "hire": 3, "variabl": 3, "further": 3, "us": 3, "maintain": 6, "properti": [2, 4, 6], "build": 6, "heapsort": 6, "prioriti": 6, "queue": [2, 6], "descript": 6, "perform": 6, "A": [0, 1, 6], "version": 6, "lower": 6, "bound": [0, 6], "count": 6, "radix": 6, "bucket": 6, "select": [1, 6], "expect": 6, "worst": 6, "case": 6, "definit": 0, "basic": 0, "oper": 0, "delet": [0, 2], "kei": 0, "from": 0, "fibonacci": 0, "mergeabl": 0, "decreas": 0, "node": 0, "degre": 0, "preliminari": 0, "approach": 0, "recurs": 0, "boe": 0, "link": [0, 2], "list": [0, 2], "represent": [0, 4], "forest": 0, "union": 0, "rank": 0, "compress": 0, "rod": 1, "cut": 1, "chain": 1, "element": 1, "longest": 1, "subsequ": 1, "an": 1, "activ": 1, "strategi": 1, "huffman": 1, "code": 1, "matroid": 1, "task": 1, "schedul": 1, "aggreg": 1, "account": 1, "potenti": 1, "stack": 2, "implement": 2, "pointer": 2, "object": 2, "repres": 2, "root": 2, "direct": [2, 4], "address": 2, "open": 2, "perfect": 2, "what": 2, "i": 2, "queri": 2, "randomli": 2, "built": 2, "red": 2, "rotat": 2, "orer": 2, "statist": 2, "how": 2, "interv": 2, "breadth": 4, "first": 4, "depth": 4, "topolog": 4, "strongli": 4, "connect": 4, "compon": 4, "grow": 4, "kruskal": 4, "prim": 4, "bellman": 4, "ford": 4, "acycl": 4, "dijkstra": 4, "differ": 4, "constraint": 4, "floyd": 4, "warshal": 4, "johnson": 4, "spars": 4, "network": 4, "fulkerson": 4, "bipartit": 4, "match": 4, "push": 4, "relabel": 4, "front": 4}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Foundations": [[3, "foundations"]], "The Role of Algorithms in Computing": [[3, "the-role-of-algorithms-in-computing"]], "Algorithms": [[3, "algorithms"]], "Algorithms as a technology": [[3, "algorithms-as-a-technology"]], "Getting Started": [[3, "getting-started"]], "Insertion Sort": [[3, "insertion-sort"]], "Analyzing Algorithms": [[3, "analyzing-algorithms"]], "Designing Algorithms": [[3, "designing-algorithms"]], "Growth of Function": [[3, "growth-of-function"]], "Asymptotic Notation": [[3, "asymptotic-notation"]], "Standard Notations and Common Functions": [[3, "standard-notations-and-common-functions"]], "Divide and Conquer": [[3, "divide-and-conquer"]], "The maximum subarray problem": [[3, "the-maximum-subarray-problem"]], "Strassen\u2019s algorithm for matrix multiplication": [[3, "strassen-s-algorithm-for-matrix-multiplication"]], "The substitution method for solving recurrences": [[3, "the-substitution-method-for-solving-recurrences"]], "The recurrence-tree method for solving recurrences": [[3, "the-recurrence-tree-method-for-solving-recurrences"]], "The master method for solving recurrences": [[3, "the-master-method-for-solving-recurrences"]], "Proof of the master theorem": [[3, "proof-of-the-master-theorem"]], "Probabilistic Analysis and Randomized Algorithms": [[3, "probabilistic-analysis-and-randomized-algorithms"]], "The hiring problem": [[3, "the-hiring-problem"]], "Indicator random variables": [[3, "indicator-random-variables"]], "Randomized algorithms": [[3, "randomized-algorithms"]], "Probabilistic analysis and further uses of indicator random variables": [[3, "probabilistic-analysis-and-further-uses-of-indicator-random-variables"]], "Sorting And Order Statics": [[6, "sorting-and-order-statics"]], "Hepsort": [[6, "hepsort"]], "Heaps": [[6, "heaps"]], "Maintaining the heap property": [[6, "maintaining-the-heap-property"]], "Building a heap": [[6, "building-a-heap"]], "The heapsort algorithm": [[6, "the-heapsort-algorithm"]], "Priority queues": [[6, "priority-queues"]], "Quicksort": [[6, "quicksort"]], "Description of quicksort": [[6, "description-of-quicksort"]], "Performance of quicksort": [[6, "performance-of-quicksort"]], "A randomized version of quicksort": [[6, "a-randomized-version-of-quicksort"]], "Analysis of quicksort": [[6, "analysis-of-quicksort"]], "Sorting in Linear Time": [[6, "sorting-in-linear-time"]], "Lower bounds for sorting": [[6, "lower-bounds-for-sorting"]], "Counting sort": [[6, "counting-sort"]], "Radix sort": [[6, "radix-sort"]], "Bucket sort": [[6, "bucket-sort"]], "Medians and Order Statics": [[6, "medians-and-order-statics"]], "Minimum and maximum": [[6, "minimum-and-maximum"]], "Selection in expected linear time": [[6, "selection-in-expected-linear-time"]], "Selection in worst case linear time": [[6, "selection-in-worst-case-linear-time"]], "Advanced Data Structures": [[0, "advanced-data-structures"]], "B-Trees": [[0, "b-trees"]], "Definition of B-Trees": [[0, "definition-of-b-trees"]], "Basic operations on B-Trees": [[0, "basic-operations-on-b-trees"]], "Deleting a key from a B-Trees": [[0, "deleting-a-key-from-a-b-trees"]], "Fibonaci Heaps": [[0, "fibonaci-heaps"]], "Structure of fibonacci heaps": [[0, "structure-of-fibonacci-heaps"]], "Mergeable-heap operations": [[0, "mergeable-heap-operations"]], "Decreasing a key and deleting a node": [[0, "decreasing-a-key-and-deleting-a-node"]], "Bounding the maximum degree": [[0, "bounding-the-maximum-degree"]], "van Emde Boas trees": [[0, "van-emde-boas-trees"]], "Preliminary approaches": [[0, "preliminary-approaches"]], "A recursive structure": [[0, "a-recursive-structure"]], "The van Emde Boes tree": [[0, "the-van-emde-boes-tree"]], "Data Structures for Disjoint Sets": [[0, "data-structures-for-disjoint-sets"]], "Disjoint-set operations": [[0, "disjoint-set-operations"]], "Linked-list representation of disjoint sets": [[0, "linked-list-representation-of-disjoint-sets"]], "Disjoint-set forests": [[0, "disjoint-set-forests"]], "Analysis of union by rank with path compression": [[0, "analysis-of-union-by-rank-with-path-compression"]], "Advanced Design And Analysis Techniques": [[1, "advanced-design-and-analysis-techniques"]], "Dynamic Programming": [[1, "dynamic-programming"]], "Rod cutting": [[1, "rod-cutting"]], "Matrix chain multiplication": [[1, "matrix-chain-multiplication"]], "Elements of dynamic programming": [[1, "elements-of-dynamic-programming"]], "Longest common subsequence": [[1, "longest-common-subsequence"]], "Greedy Algorithms": [[1, "greedy-algorithms"]], "An activity selection problem": [[1, "an-activity-selection-problem"]], "Element of the greedy strategy": [[1, "element-of-the-greedy-strategy"]], "Huffman codes": [[1, "huffman-codes"]], "Matroids and greedy methods": [[1, "matroids-and-greedy-methods"]], "A task scheduling problem as a Matroid": [[1, "a-task-scheduling-problem-as-a-matroid"]], "Amortized Analysis": [[1, "amortized-analysis"]], "Aggregate analysis": [[1, "aggregate-analysis"]], "The accounting method": [[1, "the-accounting-method"]], "The potential method": [[1, "the-potential-method"]], "Dynamic tables": [[1, "dynamic-tables"]], "Data Structures": [[2, "data-structures"]], "Elementary Data Structure": [[2, "elementary-data-structure"]], "Stacks and queues": [[2, "stacks-and-queues"]], "Linked lists": [[2, "linked-lists"]], "Implementing pointers and objects": [[2, "implementing-pointers-and-objects"]], "Representing rooted trees": [[2, "representing-rooted-trees"]], "Hash Tables": [[2, "hash-tables"]], "Direct address tables": [[2, "direct-address-tables"]], "Hash tables": [[2, "id1"]], "Hash functions": [[2, "hash-functions"]], "Open addressing": [[2, "open-addressing"]], "Perfect hashing": [[2, "perfect-hashing"]], "Binary Search Trees": [[2, "binary-search-trees"]], "What is binary search tree?": [[2, "what-is-binary-search-tree"]], "Query a binary search tree": [[2, "query-a-binary-search-tree"]], "Insertion and deletion": [[2, "insertion-and-deletion"]], "Randomly built binary search trees": [[2, "randomly-built-binary-search-trees"]], "Read-Black Tree": [[2, "read-black-tree"]], "Properties of red-black trees": [[2, "properties-of-red-black-trees"]], "Rotations": [[2, "rotations"]], "Insertion": [[2, "insertion"]], "Deletions": [[2, "deletions"]], "Augmenting Data Structures": [[2, "augmenting-data-structures"]], "Dynamic orer statistics": [[2, "dynamic-orer-statistics"]], "How to augmenting a data structure": [[2, "how-to-augmenting-a-data-structure"]], "Interval trees": [[2, "interval-trees"]], "Welcome to Algorithms\u2019s documentation!": [[5, "welcome-to-algorithms-s-documentation"]], "Indices and tables": [[5, "indices-and-tables"]], "Graph Algorithms": [[4, "graph-algorithms"]], "Elementary Graph Algorithms": [[4, "elementary-graph-algorithms"]], "Representation of graphs": [[4, "representation-of-graphs"]], "Breadth-first search": [[4, "breadth-first-search"]], "Depth-first search": [[4, "depth-first-search"]], "Topological search": [[4, "topological-search"]], "Strongly connected components": [[4, "strongly-connected-components"]], "Minimum Spanning Trees": [[4, "minimum-spanning-trees"]], "Growing a minimum spanning tree": [[4, "growing-a-minimum-spanning-tree"]], "The algorithms of Kruskal and Prim": [[4, "the-algorithms-of-kruskal-and-prim"]], "Single-Source Shortest Paths": [[4, "single-source-shortest-paths"]], "The Bellman-Ford algorithm": [[4, "the-bellman-ford-algorithm"]], "Single-source shortest paths in directed acyclic graphs": [[4, "single-source-shortest-paths-in-directed-acyclic-graphs"]], "Dijkstra\u2019s algorithm": [[4, "dijkstra-s-algorithm"]], "Difference constraints and shortest paths": [[4, "difference-constraints-and-shortest-paths"]], "Proofs of shortest-paths properties": [[4, "proofs-of-shortest-paths-properties"]], "All-Pairs Shortest Paths": [[4, "all-pairs-shortest-paths"]], "Shortest paths and matrix multiplication": [[4, "shortest-paths-and-matrix-multiplication"]], "The Floyd-Warshall algorithm": [[4, "the-floyd-warshall-algorithm"]], "Johnson\u2019s algorithm for sparse graphs": [[4, "johnson-s-algorithm-for-sparse-graphs"]], "Maximum Flow": [[4, "maximum-flow"]], "Flow networks": [[4, "flow-networks"]], "The Ford-Fulkerson method": [[4, "the-ford-fulkerson-method"]], "Maximum bipartite matching": [[4, "maximum-bipartite-matching"]], "Push-relabel-to-front algorithm": [[4, "push-relabel-to-front-algorithm"]]}, "indexentries": {}})
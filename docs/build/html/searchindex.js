Search.setIndex({"alltitles": {"A randomized version of quicksort": [[12, "a-randomized-version-of-quicksort"]], "A recursive structure": [[1, "a-recursive-structure"]], "A task scheduling problem as a Matroid": [[2, "a-task-scheduling-problem-as-a-matroid"]], "Advanced Data Structures": [[1, "advanced-data-structures"]], "Advanced Design And Analysis Techniques": [[2, "advanced-design-and-analysis-techniques"]], "Aggregate analysis": [[2, "aggregate-analysis"]], "Algorithm": [[13, "algorithm"], [15, "algorithm"], [16, "algorithm"], [17, "algorithm"], [18, "algorithm"], [21, "algorithm"], [22, "algorithm"], [23, "algorithm"], [24, "algorithm"], [25, "algorithm"], [26, "algorithm"], [28, "algorithm"], [29, "algorithm"], [32, "algorithm"]], "Algorithms": [[10, "algorithms"]], "Algorithms as a technology": [[10, "algorithms-as-a-technology"]], "All-Pairs Shortest Paths": [[11, "all-pairs-shortest-paths"]], "Amortized Analysis": [[2, "amortized-analysis"], [20, "amortized-analysis"]], "An activity selection problem": [[2, "an-activity-selection-problem"]], "Analysis of quicksort": [[12, "analysis-of-quicksort"]], "Analysis of union by rank with path compression": [[1, "analysis-of-union-by-rank-with-path-compression"]], "Analyzing Algorithms": [[10, "analyzing-algorithms"]], "Application: Sequence": [[14, "application-sequence"]], "Application: Set": [[14, "application-set"]], "Array Sequence": [[20, "array-sequence"]], "Arrays": [[6, "arrays"], [9, "arrays"]], "Asymptotic Notation": [[10, "asymptotic-notation"]], "Augmenting Data Structures": [[4, "augmenting-data-structures"]], "B-Trees": [[1, "b-trees"]], "Basic operations on B-Trees": [[1, "basic-operations-on-b-trees"]], "Binary Search Trees": [[5, "binary-search-trees"]], "Binary Tree": [[14, "binary-tree"]], "Bounding the maximum degree": [[1, "bounding-the-maximum-degree"]], "Breadth-first search": [[11, "breadth-first-search"]], "Bucket sort": [[12, "bucket-sort"]], "Building a heap": [[12, "building-a-heap"]], "Chaining": [[27, "chaining"]], "Comparison Model": [[27, "comparison-model"]], "Comparison Search Lower Bound": [[27, "comparison-search-lower-bound"]], "Comparison Sort Lower Bound": [[30, "comparison-sort-lower-bound"]], "Containers: stacks and queues": [[6, "containers-stacks-and-queues"], [9, "containers-stacks-and-queues"]], "Correctness": [[13, "correctness"], [15, "correctness"], [16, "correctness"], [17, "correctness"], [18, "correctness"], [21, "correctness"], [22, "correctness"], [23, "correctness"], [24, "correctness"], [25, "correctness"], [26, "correctness"], [28, "correctness"], [29, "correctness"], [32, "correctness"]], "Counting Sort": [[30, "counting-sort"]], "Counting sort": [[12, "counting-sort"]], "Data Structure": [[13, "data-structure"], [15, "data-structure"], [16, "data-structure"], [17, "data-structure"], [18, "data-structure"], [21, "data-structure"], [22, "data-structure"], [23, "data-structure"], [24, "data-structure"], [25, "data-structure"], [26, "data-structure"], [28, "data-structure"], [29, "data-structure"], [32, "data-structure"]], "Data Structure Interfaces": [[20, "data-structure-interfaces"]], "Data Structures": [[3, "data-structures"], [20, "data-structures"]], "Data Structures for Disjoint Sets": [[1, "data-structures-for-disjoint-sets"]], "Decision Tree": [[27, "decision-tree"]], "Decreasing a key and deleting a node": [[1, "decreasing-a-key-and-deleting-a-node"]], "Definition of B-Trees": [[1, "definition-of-b-trees"]], "Deleting a key from a B-Trees": [[1, "deleting-a-key-from-a-b-trees"]], "Deletions": [[8, "deletions"]], "Depth-first search": [[11, "depth-first-search"]], "Description of quicksort": [[12, "description-of-quicksort"]], "Designing Algorithms": [[10, "designing-algorithms"]], "Dictionary": [[6, "dictionary"], [9, "dictionary"]], "Difference constraints and shortest paths": [[11, "difference-constraints-and-shortest-paths"]], "Dijkstra\u2019s algorithm": [[11, "dijkstra-s-algorithm"]], "Direct Access Array": [[27, "direct-access-array"]], "Direct Access Array Sort": [[30, "direct-access-array-sort"]], "Disjoint-set forests": [[1, "disjoint-set-forests"]], "Disjoint-set operations": [[1, "disjoint-set-operations"]], "Divide and Conquer": [[10, "divide-and-conquer"]], "Dynamic Array Deletion": [[20, "dynamic-array-deletion"]], "Dynamic Array Sequence": [[20, "dynamic-array-sequence"]], "Dynamic Operations": [[14, "dynamic-operations"]], "Dynamic Programming": [[2, "dynamic-programming"]], "Dynamic order statistics": [[4, "dynamic-order-statistics"]], "Dynamic tables": [[2, "dynamic-tables"]], "Efficiency": [[13, "efficiency"], [15, "efficiency"], [16, "efficiency"], [17, "efficiency"], [18, "efficiency"], [21, "efficiency"], [22, "efficiency"], [23, "efficiency"], [24, "efficiency"], [25, "efficiency"], [26, "efficiency"], [28, "efficiency"], [29, "efficiency"], [32, "efficiency"]], "Element of the greedy strategy": [[2, "element-of-the-greedy-strategy"]], "Elementary Data Structures": [[6, "elementary-data-structures"], [9, "elementary-data-structures"]], "Elementary Graph Algorithms": [[11, "elementary-graph-algorithms"]], "Elements of dynamic programming": [[2, "elements-of-dynamic-programming"]], "Exercises": [[6, "exercises"], [9, "exercises"]], "Fibonaci Heaps": [[1, "fibonaci-heaps"]], "Flow networks": [[11, "flow-networks"]], "Foundations": [[10, "foundations"]], "Getting Started": [[10, "getting-started"]], "Graph Algorithms": [[11, "graph-algorithms"]], "Greedy Algorithms": [[2, "greedy-algorithms"]], "Growing a minimum spanning tree": [[11, "growing-a-minimum-spanning-tree"]], "Growth of Function": [[10, "growth-of-function"]], "Hah Function": [[27, "hah-function"]], "Hash Table": [[7, "hash-table"]], "Hashing": [[27, "hashing"], [27, "id1"]], "Heaps": [[12, "heaps"]], "Hepsort": [[12, "hepsort"]], "How": [[14, "how"]], "How to augmenting a data structure": [[4, "how-to-augmenting-a-data-structure"]], "Huffman codes": [[2, "huffman-codes"]], "Implementing pointers and objects": [[7, "implementing-pointers-and-objects"]], "Indicator random variables": [[10, "indicator-random-variables"]], "Indices and tables": [[0, "indices-and-tables"]], "Insertion": [[8, "insertion"]], "Insertion Sort": [[10, "insertion-sort"], [31, "insertion-sort"]], "Insertion and deletion": [[5, "insertion-and-deletion"]], "Interval trees": [[4, "interval-trees"]], "Introduction": [[13, "introduction"], [15, "introduction"], [16, "introduction"], [17, "introduction"], [18, "introduction"], [21, "introduction"], [22, "introduction"], [23, "introduction"], [24, "introduction"], [25, "introduction"], [26, "introduction"], [28, "introduction"], [29, "introduction"], [32, "introduction"]], "Introduction To Algorithms": [[19, "introduction-to-algorithms"]], "Johnson\u2019s algorithm for sparse graphs": [[11, "johnson-s-algorithm-for-sparse-graphs"]], "Linear Sorting": [[30, "linear-sorting"]], "Linked List Sequence": [[20, "linked-list-sequence"]], "Linked lists": [[7, "linked-lists"]], "Linked-list representation of disjoint sets": [[1, "linked-list-representation-of-disjoint-sets"]], "Longest common subsequence": [[2, "longest-common-subsequence"]], "Lower bounds for sorting": [[12, "lower-bounds-for-sorting"]], "Maintaining the heap property": [[12, "maintaining-the-heap-property"]], "Matrix chain multiplication": [[2, "matrix-chain-multiplication"]], "Matroids and greedy methods": [[2, "matroids-and-greedy-methods"]], "Maximum Flow": [[11, "maximum-flow"]], "Maximum bipartite matching": [[11, "maximum-bipartite-matching"]], "Medians and Order Statics": [[12, "medians-and-order-statics"]], "Merge Sort": [[31, "merge-sort"]], "Mergeable-heap operations": [[1, "mergeable-heap-operations"]], "Minimum Spanning Trees": [[11, "minimum-spanning-trees"]], "Minimum and maximum": [[12, "minimum-and-maximum"]], "Model of computation": [[13, "model-of-computation"], [15, "model-of-computation"], [16, "model-of-computation"], [17, "model-of-computation"], [18, "model-of-computation"], [21, "model-of-computation"], [22, "model-of-computation"], [23, "model-of-computation"], [24, "model-of-computation"], [25, "model-of-computation"], [26, "model-of-computation"], [28, "model-of-computation"], [29, "model-of-computation"], [32, "model-of-computation"]], "Performance of quicksort": [[12, "performance-of-quicksort"]], "Permutation Sort": [[31, "permutation-sort"]], "Pointers and linked structures": [[6, "pointers-and-linked-structures"], [9, "pointers-and-linked-structures"]], "Preliminary approaches": [[1, "preliminary-approaches"]], "Priority queues": [[12, "priority-queues"]], "Probabilistic Analysis and Randomized Algorithms": [[10, "probabilistic-analysis-and-randomized-algorithms"]], "Probabilistic analysis and further uses of indicator random variables": [[10, "probabilistic-analysis-and-further-uses-of-indicator-random-variables"]], "Problem": [[13, "problem"], [15, "problem"], [16, "problem"], [17, "problem"], [18, "problem"], [21, "problem"], [22, "problem"], [23, "problem"], [24, "problem"], [25, "problem"], [26, "problem"], [28, "problem"], [29, "problem"], [32, "problem"]], "Proof of the master theorem": [[10, "proof-of-the-master-theorem"]], "Proofs of shortest-paths properties": [[11, "proofs-of-shortest-paths-properties"]], "Properties of red-black trees": [[8, "properties-of-red-black-trees"]], "Push-relabel-to-front algorithm": [[11, "push-relabel-to-front-algorithm"]], "Query a binary search tree": [[5, "query-a-binary-search-tree"]], "Quicksort": [[12, "quicksort"]], "Radix Sort": [[30, "radix-sort"]], "Radix sort": [[12, "radix-sort"]], "Randomized algorithms": [[10, "randomized-algorithms"]], "Randomly built binary search trees": [[5, "randomly-built-binary-search-trees"]], "Read-Black Tree": [[8, "read-black-tree"]], "Representation of graphs": [[11, "representation-of-graphs"]], "Representing rooted trees": [[7, "representing-rooted-trees"]], "Rod cutting": [[2, "rod-cutting"]], "Rotations": [[8, "rotations"]], "Selection Sort": [[31, "selection-sort"]], "Selection in expected linear time": [[12, "selection-in-expected-linear-time"]], "Selection in worst case linear time": [[12, "selection-in-worst-case-linear-time"]], "Sequence Interface": [[20, "sequence-interface"]], "Set Interface": [[20, "set-interface"], [31, "set-interface"]], "Shortest paths and matrix multiplication": [[11, "shortest-paths-and-matrix-multiplication"]], "Single-Source Shortest Paths": [[11, "single-source-shortest-paths"]], "Single-source shortest paths in directed acyclic graphs": [[11, "single-source-shortest-paths-in-directed-acyclic-graphs"]], "Solving Recurrences": [[31, "solving-recurrences"]], "Sorting": [[31, "sorting"], [31, "id1"]], "Sorting And Order Statics": [[12, "sorting-and-order-statics"]], "Sorting in Linear Time": [[12, "sorting-in-linear-time"]], "Stacks and queues": [[7, "stacks-and-queues"]], "Standard Notations and Common Functions": [[10, "standard-notations-and-common-functions"]], "Strassen\u2019s algorithm for matrix multiplication": [[10, "strassen-s-algorithm-for-matrix-multiplication"]], "Strongly connected components": [[11, "strongly-connected-components"]], "Structure of fibonacci heaps": [[1, "structure-of-fibonacci-heaps"]], "Terminology": [[14, "terminology"]], "The Bellman-Ford algorithm": [[11, "the-bellman-ford-algorithm"]], "The Floyd-Warshall algorithm": [[11, "the-floyd-warshall-algorithm"]], "The Ford-Fulkerson method": [[11, "the-ford-fulkerson-method"]], "The Role of Algorithms in Computing": [[10, "the-role-of-algorithms-in-computing"]], "The accounting method": [[2, "the-accounting-method"]], "The algorithms of Kruskal and Prim": [[11, "the-algorithms-of-kruskal-and-prim"]], "The heapsort algorithm": [[12, "the-heapsort-algorithm"]], "The hiring problem": [[10, "the-hiring-problem"]], "The master method for solving recurrences": [[10, "the-master-method-for-solving-recurrences"]], "The maximum subarray problem": [[10, "the-maximum-subarray-problem"]], "The potential method": [[2, "the-potential-method"]], "The recurrence-tree method for solving recurrences": [[10, "the-recurrence-tree-method-for-solving-recurrences"]], "The substitution method for solving recurrences": [[10, "the-substitution-method-for-solving-recurrences"]], "The van Emde Boes tree": [[1, "the-van-emde-boes-tree"]], "Title": [[14, "id1"]], "Topological search": [[11, "topological-search"]], "Tree Navigation": [[14, "tree-navigation"]], "Tuple Sort": [[30, "tuple-sort"]], "Welcome to Algorithms\u2019s documentation!": [[0, "welcome-to-algorithms-s-documentation"]], "What is binary search tree?": [[5, "what-is-binary-search-tree"]], "van Emde Boas trees": [[1, "van-emde-boas-trees"]]}, "docnames": ["index", "mit_book/advancedDataStructures", "mit_book/advancedDesignAndAnalysisTechniques", "mit_book/dataStructures", "mit_book/data_structure/augmentingDataStructures", "mit_book/data_structure/binarySearchTree", "mit_book/data_structure/elementaryDataStructure", "mit_book/data_structure/hashTables", "mit_book/data_structure/redBlackTree", "mit_book/foundation/foundation", "mit_book/foundations", "mit_book/graphAlgorithms", "mit_book/sortingAndOrderStatics", "mit_syllabus/mitBellmanFord", "mit_syllabus/mitBinaryTree", "mit_syllabus/mitBinaryTreeAVL", "mit_syllabus/mitBinaryTreeHeaps", "mit_syllabus/mitBreadthFirstSearch", "mit_syllabus/mitComplexity", "mit_syllabus/mitCourse", "mit_syllabus/mitDataStructure", "mit_syllabus/mitDeapthFirstSearch", "mit_syllabus/mitDijkstraAlgorithm", "mit_syllabus/mitDynamicProgrammingAPSPParensPiano", "mit_syllabus/mitDynamicProgrammingPseudopolynomials", "mit_syllabus/mitDynamicProgrammingRecursive", "mit_syllabus/mitDynamicProgrammingSubproblems", "mit_syllabus/mitHashing", "mit_syllabus/mitIntroduction", "mit_syllabus/mitJohnsonAlgorithm", "mit_syllabus/mitLinearSorting", "mit_syllabus/mitSorting", "mit_syllabus/mitWeightedShortestPaths"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "mit_book/advancedDataStructures.rst", "mit_book/advancedDesignAndAnalysisTechniques.rst", "mit_book/dataStructures.rst", "mit_book/data_structure/augmentingDataStructures.rst", "mit_book/data_structure/binarySearchTree.rst", "mit_book/data_structure/elementaryDataStructure.rst", "mit_book/data_structure/hashTables.rst", "mit_book/data_structure/redBlackTree.rst", "mit_book/foundation/foundation.rst", "mit_book/foundations.rst", "mit_book/graphAlgorithms.rst", "mit_book/sortingAndOrderStatics.rst", "mit_syllabus/mitBellmanFord.rst", "mit_syllabus/mitBinaryTree.rst", "mit_syllabus/mitBinaryTreeAVL.rst", "mit_syllabus/mitBinaryTreeHeaps.rst", "mit_syllabus/mitBreadthFirstSearch.rst", "mit_syllabus/mitComplexity.rst", "mit_syllabus/mitCourse.rst", "mit_syllabus/mitDataStructure.rst", "mit_syllabus/mitDeapthFirstSearch.rst", "mit_syllabus/mitDijkstraAlgorithm.rst", "mit_syllabus/mitDynamicProgrammingAPSPParensPiano.rst", "mit_syllabus/mitDynamicProgrammingPseudopolynomials.rst", "mit_syllabus/mitDynamicProgrammingRecursive.rst", "mit_syllabus/mitDynamicProgrammingSubproblems.rst", "mit_syllabus/mitHashing.rst", "mit_syllabus/mitIntroduction.rst", "mit_syllabus/mitJohnsonAlgorithm.rst", "mit_syllabus/mitLinearSorting.rst", "mit_syllabus/mitSorting.rst", "mit_syllabus/mitWeightedShortestPaths.rst"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [6, 9], "1": [6, 9, 14], "10": [6, 9], "12": [6, 9], "2": [6, 9, 14], "269": [6, 9], "3": [6, 9, 14], "4": [6, 9], "5": [6, 9], "6": [6, 9], "7": [6, 9], "79": [6, 9], "8": [6, 9], "9": [6, 9], "A": [0, 6, 9, 20], "And": 0, "For": [6, 9], "In": [6, 9], "No": [6, 9], "The": [0, 6, 9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "Then": [6, 9], "To": 0, "abov": [6, 9], "accept": [6, 9], "access": [0, 6, 9, 19], "account": 0, "achiev": [6, 9, 14], "activ": 0, "actual": [6, 9], "acycl": 0, "address": [6, 9], "adjust": [6, 9], "adt": 20, "advanc": 0, "advantag": [6, 9], "after": [6, 9], "aggreg": 0, "algorithm": [6, 9, 20], "all": [0, 6, 9], "alloc": [6, 9], "also": 20, "among": [6, 9], "amort": [0, 6, 9, 19], "an": [0, 6, 9, 10, 20], "anagram": [6, 9], "analysi": [0, 19], "analyz": 0, "ani": [6, 9, 10], "api": 20, "applic": [0, 19], "approach": 0, "ar": [6, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "arbitrari": [6, 9], "arrai": [0, 3, 19], "asymptot": 0, "attempt": 0, "augment": [0, 3], "b": [0, 6, 9], "backward": [6, 9], "bad": [6, 9], "balanc": [6, 9], "base": 14, "basic": 0, "bellman": 0, "below": [6, 9], "better": [6, 9], "between": [6, 9], "binari": [0, 2, 19], "bipartit": 0, "black": [0, 3], "block": 9, "boa": 0, "board": [6, 9], "boe": 0, "boi": [6, 9], "book": 0, "both": [6, 9], "bound": [0, 19], "box": [6, 9], "breadth": 0, "breath": [6, 9], "bucket": 0, "build": 0, "c": 9, "cach": [6, 9], "call": 20, "can": [6, 9, 14], "case": [0, 14], "cell": [6, 9], "chain": [0, 19], "class": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "close": [6, 9], "code": [0, 9], "collect": 20, "column": [6, 9, 14], "common": [0, 6, 9], "commun": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "comparison": [0, 19], "compil": [6, 9], "compon": 0, "compress": 0, "comput": [0, 19], "concern": [6, 9], "conect": [6, 9], "connect": 0, "conquer": 0, "consecut": [6, 9], "consid": [6, 9], "consist": [6, 9], "constant": [6, 9], "constraint": 0, "contain": [0, 3], "content": [6, 9], "contigu": [6, 9], "contiguosli": [6, 9], "continu": [6, 9], "correct": [0, 19], "cost": [6, 9], "count": [0, 19], "cow": [6, 9], "cpp": [], "creat": [6, 9], "credit": [6, 9], "cut": [0, 6, 9], "data": [0, 14, 19], "datastructur": 6, "decis": [0, 19], "decreas": 0, "defin": 10, "definit": 0, "degre": 0, "delet": [0, 3, 6, 9, 19], "delete_list": [6, 9], "demand": [6, 9], "depth": 0, "dequeu": [6, 9], "describ": [0, 6, 9], "descript": 0, "design": [0, 6, 9], "detail": [6, 9], "determin": [6, 9], "develop": 0, "diagon": [6, 9], "dictionari": [0, 3], "differ": 0, "difficult": 0, "digit": [6, 9], "dijkstra": 0, "direct": [0, 6, 9, 19], "directli": [6, 9], "disadvantag": [6, 9], "disjoint": 0, "divid": 0, "do": [6, 9], "doubli": [6, 9], "duplic": [6, 9], "dynam": [0, 3, 6, 9, 19], "each": [0, 6, 9], "editor": [6, 9], "effici": [0, 6, 9, 19], "efficieni": [6, 9], "element": [0, 6, 9], "elementari": [0, 3], "els": [6, 9], "emd": 0, "enabl": [6, 9], "encount": 0, "enjoy": 0, "enlarg": [6, 9], "enqueu": [6, 9], "everi": 0, "exampl": [6, 9], "execut": [6, 9], "exercis": [0, 3], "expect": 0, "exploit": [6, 9], "extend": [6, 9], "fall": [6, 9], "fals": [6, 9], "fibonacci": 0, "fibonaci": 0, "field": 0, "fifo": [6, 9], "find": [6, 9], "findmin": [6, 9], "first": [0, 6, 9], "fix": [6, 9], "flow": 0, "floyd": 0, "food": [6, 9], "footnot": [6, 9], "ford": 0, "forest": 0, "form": [6, 9], "foundat": 0, "free": [6, 9], "from": [0, 6, 9], "front": 0, "fulkerson": 0, "full": [6, 9], "function": [0, 6, 9, 19], "fundament": [6, 9], "further": 0, "game": [6, 9], "get": 0, "give": [6, 9], "given": [6, 9], "goal": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "graph": 0, "greedi": 0, "grow": [0, 6, 9], "growth": 0, "hah": [0, 19], "half": [6, 9], "hash": [0, 3, 19], "have": [0, 6, 9], "head": 14, "heap": 0, "heapsort": 0, "help": [0, 6, 9], "hepsort": 0, "high": [6, 9], "highlight": [], "hint": [6, 9], "hire": 0, "hold": [6, 9], "how": [0, 3, 6, 9, 19, 20], "howev": [6, 9], "huffman": 0, "i": [0, 6, 9, 10, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "ideal": [6, 9], "identifi": [6, 9], "implement": [0, 3, 6, 9], "incest": [6, 9], "index": [6, 9], "input": 10, "insect": [6, 9], "insert": [0, 3, 6, 9, 19], "insert_list": [6, 9], "instantli": [6, 9], "interfac": [0, 6, 9, 19], "interst": 0, "interv": [0, 3], "introduct": 0, "item": [6, 9, 14], "item_ahead": [6, 9], "item_typ": [6, 9], "its": [6, 9], "job": [6, 9], "johnson": 0, "k": [6, 9], "kei": 0, "keypad": [6, 9], "kruskal": 0, "l": [6, 9], "last": [6, 9], "left": 14, "length": [6, 9], "let": [6, 9], "letter": [6, 9], "lifo": [6, 9], "like": 14, "linear": [0, 6, 9, 19], "lineno": 9, "linenothreshold": [], "link": [0, 3, 14, 19], "list": [0, 3, 6, 9, 14, 19], "listen": [6, 9], "local": [6, 9], "locat": [6, 9], "longest": [0, 6, 9], "lower": [0, 19], "mail": [6, 9], "main": 20, "maintain": [0, 6, 9], "make": 0, "malloc": [6, 9], "manner": 0, "map": [6, 9], "mark": [6, 9], "master": 0, "match": 0, "matrix": 0, "matroid": 0, "max": [6, 9], "maximum": [0, 6, 9], "median": 0, "memori": [6, 9], "merg": [0, 19], "mergeabl": 0, "method": 0, "middl": [6, 9], "min": [6, 9], "minim": [6, 9], "minimum": [0, 6, 9], "miracl": [6, 9], "model": [0, 19], "move": [6, 9], "multipl": 0, "n": [6, 9], "name": [6, 9], "navig": [0, 19], "necessarili": [6, 9], "need": [6, 9], "nest": [6, 9], "network": 0, "next": [6, 9], "node": [0, 14], "notat": 0, "now": [6, 9], "null": [6, 9], "o": [6, 9], "object": [0, 3], "offend": [6, 9], "one": [0, 6, 9], "onto": [6, 9], "open": [6, 9], "oper": [0, 6, 9, 19, 20], "optim": 2, "order": [0, 3], "other": [6, 9], "otherwis": [6, 9], "out": [6, 9], "output": 10, "p": [6, 9], "page": [6, 9], "pair": [0, 6, 9], "parent": 14, "parenthes": [6, 9], "parenthesi": [6, 9], "particular": [6, 9], "path": 0, "per": [6, 9, 14], "perform": [0, 6, 9, 14], "permut": [0, 19], "physic": [6, 9], "piec": [6, 9], "place": [6, 9], "plai": [6, 9], "player": [6, 9], "point": [6, 9], "pointer": [0, 3, 14], "pop": [6, 9], "posit": [6, 9], "possibl": [6, 9], "potenti": 0, "precessor": [6, 9], "pred": [6, 9], "predessor": [6, 9], "preliminari": 0, "prim": 0, "prioriti": 0, "probabilist": 0, "problem": [0, 6, 9, 19, 20], "procedur": 10, "process": [6, 9], "produc": 10, "program": 0, "project": 0, "proof": 0, "properli": [6, 9], "properti": [0, 3], "provid": 0, "push": [0, 6, 9], "queue": [0, 3], "quicksort": 0, "radix": [0, 19], "random": 0, "rank": 0, "read": [0, 3], "rearrang": [6, 9], "record": [6, 9], "recurr": [0, 19], "recurs": [0, 6, 9], "red": [0, 3], "refriger": [6, 9], "relabel": 0, "remov": [6, 9], "report": [6, 9], "repres": [0, 3], "represent": [0, 14, 20], "return": [6, 9], "revers": [6, 9], "right": 14, "rod": 0, "role": 0, "root": [0, 3], "rotat": [0, 3], "row": [6, 9, 14], "run": [6, 9], "sai": [6, 9], "schedul": 0, "search": [0, 2, 6, 9, 19], "search_list": [6, 9], "seek": [6, 9], "seen": [6, 9], "select": [0, 19], "sequenc": [0, 6, 9, 10, 19], "set": [0, 10, 19], "shortest": 0, "should": [6, 9], "shrink": [6, 9], "silent": [6, 9], "singl": 0, "singli": [6, 9], "size": [6, 9], "sizeof": [6, 9], "so": [6, 9], "solut": [6, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "solv": [0, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32], "some": 10, "sort": [0, 6, 9, 19], "sourc": 0, "space": [6, 9], "span": 0, "spars": 0, "specif": 20, "speed": [6, 9], "spoilag": [6, 9], "stack": [0, 3], "standard": [0, 6, 9], "start": 0, "static": 0, "statist": [0, 3], "step": [0, 10], "still": [6, 9], "store": 20, "strassen": 0, "strategi": [0, 6, 9], "string": [6, 9], "strongli": 0, "struct": [6, 9], "structur": [0, 14, 19], "subarrai": 0, "subsequ": 0, "substitut": 0, "success": [6, 9], "successor": [6, 9], "suggest": [6, 9], "support": [6, 9, 20], "suppos": [6, 9], "tabl": 3, "tac": [6, 9], "take": [6, 9, 10], "task": 0, "teach": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "techniqu": 0, "technologi": 0, "telephon": [6, 9], "terminologi": [0, 19], "text": [6, 9], "than": [6, 9], "them": [6, 9], "theorem": 0, "thi": [0, 6, 9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "three": 14, "thu": 10, "tic": [6, 9], "time": [0, 6, 9], "toe": [6, 9], "togeth": [6, 9], "topolog": 0, "transform": 10, "tree": [0, 2, 3, 19], "true": [6, 9], "tupl": [0, 19], "turn": [6, 9], "two": [6, 9, 20], "type": [6, 9], "typedef": [6, 9], "typic": [6, 9], "under": 0, "underflow": [6, 9], "unfamiliar": 0, "union": 0, "unsort": [6, 9], "us": [0, 6, 9], "valu": 10, "van": 0, "variabl": 0, "version": 0, "void": [6, 9], "wai": 20, "warshal": 0, "wast": [6, 9], "we": [0, 6, 9], "well": 10, "what": [6, 9, 20], "when": [0, 6, 9], "whenev": [6, 9], "where": [6, 9], "whether": [6, 9], "which": [6, 9], "while": [6, 9], "won": [6, 9], "word": [6, 9], "work": [6, 9], "worst": [0, 14], "write": [6, 9], "x": [6, 9], "y": [6, 9], "you": [0, 6, 9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "your": [6, 9, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32]}, "titles": ["Welcome to Algorithms\u2019s documentation!", "Advanced Data Structures", "Advanced Design And Analysis Techniques", "Data Structures", "Augmenting Data Structures", "Binary Search Trees", "Elementary Data Structures", "Hash Table", "Read-Black Tree", "Elementary Data Structures", "Foundations", "Graph Algorithms", "Sorting And Order Statics", "Introduction", "Binary Tree", "Introduction", "Introduction", "Introduction", "Introduction", "Introduction To Algorithms", "Data Structures", "Introduction", "Introduction", "Introduction", "Introduction", "Introduction", "Introduction", "Hashing", "Introduction", "Introduction", "Linear Sorting", "Sorting", "Introduction"], "titleterms": {"": [0, 10, 11], "A": [1, 2, 12], "And": [2, 12], "The": [1, 2, 10, 11, 12], "To": 19, "access": [27, 30], "account": 2, "activ": 2, "acycl": 11, "advanc": [1, 2], "aggreg": 2, "algorithm": [0, 2, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32], "all": 11, "amort": [2, 20], "an": 2, "analysi": [1, 2, 10, 12, 20], "analyz": 10, "applic": 14, "approach": 1, "arrai": [6, 9, 20, 27, 30], "asymptot": 10, "augment": 4, "b": 1, "basic": 1, "bellman": 11, "binari": [5, 14], "bipartit": 11, "black": 8, "boa": 1, "boe": 1, "bound": [1, 12, 27, 30], "breadth": 11, "bucket": 12, "build": 12, "built": 5, "case": 12, "chain": [2, 27], "code": 2, "common": [2, 10], "comparison": [27, 30], "compon": 11, "compress": 1, "comput": [10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "connect": 11, "conquer": 10, "constraint": 11, "contain": [6, 9], "correct": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "count": [12, 30], "cut": 2, "data": [1, 3, 4, 6, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "decis": 27, "decreas": 1, "definit": 1, "degre": 1, "delet": [1, 5, 8, 20], "depth": 11, "descript": 12, "design": [2, 10], "dictionari": [6, 9], "differ": 11, "dijkstra": 11, "direct": [11, 27, 30], "disjoint": 1, "divid": 10, "document": 0, "dynam": [2, 4, 14, 20], "effici": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "element": 2, "elementari": [6, 9, 11], "emd": 1, "exercis": [6, 9], "expect": 12, "fibonacci": 1, "fibonaci": 1, "first": 11, "flow": 11, "floyd": 11, "ford": 11, "forest": 1, "foundat": 10, "from": 1, "front": 11, "fulkerson": 11, "function": [10, 27], "further": 10, "get": 10, "graph": 11, "greedi": 2, "grow": 11, "growth": 10, "hah": 27, "hash": [7, 27], "heap": [1, 12], "heapsort": 12, "hepsort": 12, "hire": 10, "how": [4, 14], "huffman": 2, "i": 5, "implement": 7, "indic": [0, 10], "insert": [5, 8, 10, 31], "interfac": [20, 31], "interv": 4, "introduct": [13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 32], "johnson": 11, "kei": 1, "kruskal": 11, "linear": [12, 30], "link": [1, 6, 7, 9, 20], "list": [1, 7, 20], "longest": 2, "lower": [12, 27, 30], "maintain": 12, "master": 10, "match": 11, "matrix": [2, 10, 11], "matroid": 2, "maximum": [1, 10, 11, 12], "median": 12, "merg": 31, "mergeabl": 1, "method": [2, 10, 11], "minimum": [11, 12], "model": [13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32], "multipl": [2, 10, 11], "navig": 14, "network": 11, "node": 1, "notat": 10, "object": 7, "oper": [1, 14], "order": [4, 12], "pair": 11, "path": [1, 11], "perform": 12, "permut": 31, "pointer": [6, 7, 9], "potenti": 2, "preliminari": 1, "prim": 11, "prioriti": 12, "probabilist": 10, "problem": [2, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 28, 29, 32], "program": 2, "proof": [10, 11], "properti": [8, 11, 12], "push": 11, "queri": 5, "queue": [6, 7, 9, 12], "quicksort": 12, "radix": [12, 30], "random": [10, 12], "randomli": 5, "rank": 1, "read": 8, "recurr": [10, 31], "recurs": 1, "red": 8, "relabel": 11, "repres": 7, "represent": [1, 11], "rod": 2, "role": 10, "root": 7, "rotat": 8, "schedul": 2, "search": [5, 11, 27], "select": [2, 12, 31], "sequenc": [14, 20], "set": [1, 14, 20, 31], "shortest": 11, "singl": 11, "solv": [10, 31], "sort": [10, 12, 30, 31], "sourc": 11, "span": 11, "spars": 11, "stack": [6, 7, 9], "standard": 10, "start": 10, "static": 12, "statist": 4, "strassen": 10, "strategi": 2, "strongli": 11, "structur": [1, 3, 4, 6, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 28, 29, 32], "subarrai": 10, "subsequ": 2, "substitut": 10, "tabl": [0, 2, 7], "task": 2, "techniqu": 2, "technologi": 10, "terminologi": 14, "theorem": 10, "time": 12, "titl": 14, "topolog": 11, "tree": [1, 4, 5, 7, 8, 10, 11, 14, 27], "tupl": 30, "union": 1, "us": 10, "van": 1, "variabl": 10, "version": 12, "warshal": 11, "welcom": 0, "what": 5, "worst": 12}})